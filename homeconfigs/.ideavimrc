set nocompatible
set visualbell
set noerrorbells

set number relativenumber

set cursorline
set scrolloff=6
set incsearch
set hlsearch

set timeoutlen=300

set mousehide mh

" https://www.youtube.com/watch?v=XA2WjJbmmoM

" You can write your own commands, key mappings, functions, etc, and there is
" also vimscript as well.
" :h map.txt
" https://learnvim.irian.to/customize/vimrc
" https://learnvim.irian.to/vimscript/vimscript_basic_data_types
"
" n is normal mode, i is insert mode, (v)isual and (c)ommand, etc
" nore means non-recursive (best practice unless desired)
" map means map
"
" Remember, when using commands, you have access to $HOME and stuff
" When writing snippets, , is a good leader

let mapleader = "\<space>"
" The JetBrains section adds a keymap this as well.
noremap <Leader>/ :noh<CR>
nnoremap Q <nop>

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

" This (should) paste the current Yank and instead of Yanking the dropped code,
" throw that text into the void, keeping the prior Yank
" nnoremap <Leader>p \"_dP

" This will Yank to the system clipboard
nnoremap <Leader>y \"+y
vnoremap <Leader>y \"+y
" This will Paste from the system clipboard
nnoremap <Leader>p \"+p
vnoremap <Leader>p \"+p

" This isn't working? At least not in ideavim
set mps+='<:>'

" This (should) delete to the void register
" nnoremap <Leader>d \"_d
" vnoremap <Leader>d \"_d

if has('ide')
    " ---------------------------------------------------------------------------------------------
    " JetBrains
    " ---------

    " Additional mapping updates to make at an IDE level. You want as few of
    " these as possible since JetBrains won't save across OSes or across IDEs.
    " 1. Configure File Colors for non-solution files to rose
    " 2. Make sure Sawyer's config.nvim is cloned and configured, it has lotsa helper utils
    " 3. Settings / Editor Tabs / Appearance / Tab Placement: None
    " 4. Settings / Editor / General / Appearance
    "   - Uncheck `Show hard wrap and visual guides`
    " 5. Remove trailing spaces on
    " G. Add theme Catpuccian, and set to Mocha
    "   Or set to Rider Night, Rider Day, or Reshaper Day
    " 7. Disable plugin 'Full LIne Code completion` and update keymaps to change Insert Inline Proposal from tab to enter
    " 8. Keymaps: change Choose Lookup Item from enter to tab
    " 9. Move breadcrumbs to bottom
    " 10. Install Harpooner plugin (or try HarpoonIJ again), and configure settings
    " 11. Disable: File | Settings | Editor | General | Code Folding | Fold by default | .NET | Preprocessor Regions

    " ---------------------------------------------------------------------------------------------
    " .ideavimrc by JetBrains
    " -----------------------

    " TODO: autocommand: Terminal.Escape executes HideActiveWindow

    " To find action IDs, turn on `IdeaVim: track action Ids`
    " NOTE: IdeaVim doesn't support nore

    " Recall: vim buffers are JB tabs, vim windows are JB groups, and vim tabs
    " don't exist.

    set ignorecase
    set smartcase

    set ideajoin

    nmap <A-6> <C-S-6>
    nmap <C-h> <C-w><C-h>
    nmap <C-l> <C-w><C-l>
    nmap <C-j> <C-w><C-j>
    nmap <C-k> <C-w><C-k>

    " HarpoonIJ; it got broke at one point
    "nmap <Leader>l <Action>(ShowHarpoon)
    "nmap <Leader>a <Action>(AddToHarpoon)
    "nmap <A-f> <Action>(GotoHarpoon1)
    "nmap <A-d> <Action>(GotoHarpoon2)
    "nmap <A-s> <Action>(GotoHarpoon3)
    "nmap <A-a> <Action>(GotoHarpoon4)
    "nmap <A-v> <Action>(GotoHarpoon5)

    " Harpooner
    nmap <leader>l <action>(HarpoonerToggleQuickMenu)
    nmap <leader>a <action>(HarpoonerToggleFile)
    nmap <A-f> <action>(HarpoonerOpenFile0)
    nmap <A-d> <action>(HarpoonerOpenFile1)
    nmap <A-s> <action>(HarpoonerOpenFile2)
    nmap <A-a> <action>(HarpoonerOpenFile3)
    nmap <leader>hc <action>(HarpoonerClearMenu)

    nmap <esc> :noh<CR><Action>(HideActiveWindow)
    nmap <Leader><esc> <Action>(HideAllWindows)

    " No <Leader>ml or <Leader>mj
    " No vertical res keymaps
    " No quickfix lists (rip)
    " No C-f for tmux sessionizer, even tho rider-sessionizer exists, because I'm not seeing how
    "       to have Rider open a terminal and enter text, and because <cmd>! isn't an appropriate
    "       ioctl device to do that
    " No netrw
    " (Currently) no CSV Rainbow equivalent installed+configured

    nmap <Leader>f <Action>(ReformatCode)

    nmap <A-e> <Action>(ActivateTerminalToolWindow)
    nmap <Leader>e <Action>(Terminal.OpenInTerminal)
    nmap <Leader>w <Action>(Switcher)

    nmap <Leader><Leader> <Action>(SearchEverywhere)
    nmap <Leader>sf <Action>(GotoFile)
    nmap <Leader>ss <Action>(GotoSymbol)
    nmap <Leader>sa <Action>(GotoAction)
    nmap <Leader>sg <Action>(TextSearchAction)
    nmap <Leader>sc <Action>(GotoClass)

    nmap <leader>ds <Action>(ActivateStructureToolWindow)
    nmap <Leader>sd <Action>(ActivateProblemsViewToolWindow)
    nmap <Leader>st <Action>(ActivateTODOToolWindow)
    nmap <Leader>n <Action>(ActivateProjectToolWindow)

    nmap <Leader>/ <Action>(Replace)
    vmap <Leader>/ <Action>(Replace)

    nmap <A-j> <C-f>zz
    nmap <A-k> <C-b>zz
    vmap <A-j> <C-f>zz
    vmap <A-k> <C-b>zz

    nmap <A-i> <Action>(MethodDown)
    nmap <A-o> <Action>(MethodUp)
    vmap <A-i> <Action>(MethodDown)
    vmap <A-o> <Action>(MethodUp)

    nmap <leader>b <Action>(ToggleLineBreakpoint)
    nmap <leader>B <Action>(AddConditionalBreakpoint)
    " TODO: func keys for debug/run opts?
    " vim.keymap.set('n', '<F5>', dap.continue, { desc = 'Debug: Start/Continue' })
    " vim.keymap.set('n', '<F1>', dap.step_into, { desc = 'Debug: Step Into' })
    " vim.keymap.set('n', '<F2>', dap.step_over, { desc = 'Debug: Step Over' })
    " vim.keymap.set('n', '<F3>', dap.step_out, { desc = 'Debug: Step Out' })

    imap <A-l> <Action>(CodeCompletion)
    imap <A-j> <Action>(EditorDown)
    imap <A-k> <Action>(EditorUp)
    nmap <Leader>k <Action>(ShowErrorDescription)

    nmap gd <Action>(GotoDeclaration)
    nmap gD <Action>(GotoTypeDeclaration)
    nmap gr <Action>(FindUsages)
    vmap gc <Action>(CommentByLineComment)
    nmap <Leader>ca <Action>(ShowIntentionActions)
    vmap <Leader>ca <Action>(ShowIntentionActions)
    nmap <Leader>cr <Action>(RenameElement)

    nmap <Leader>rb <Action>(BuildWholeSolutionAction)
    nmap <Leader>rr <Action>(Run)
    nmap <Leader>rs <Action>(Stop)
    nmap <Leader>rd <Action>(Debug)
    " There's a <Leader>rt keymap in rider to run unit tests

    nmap <Leader>oi :e ~/.ideavimrc<CR>
    " This mapping really likes being inconsistent, and loves breaking on Windows.
    nmap <Leader>ods :!rider-dotnet-secrets-open.sh<CR>:echo ''

    " To see the name of the specific IDE, use :echo &ide
    if &ide =~? 'JetBrains Rider'
        nmap <A-;> <Action>(ReSharperGotoNextErrorInSolution)
        nmap <A-,> <Action>(ReSharperGotoPrevErrorInSolution)
        nmap gI <Action>(ReSharperGotoImplementation)
        nmap gci <Action>(RiderShowIncomingCalls)
        nmap gco <Action>(RiderShowOutgoingCalls)
        nmap <Leader>rt <Action>(RiderUnitTestRunSolutionAction)
    else
        nmap <A-;> <Action>(GotoNextError)
        nmap <A-,> <Action>(GotoPreviousError)
    endif

endif
